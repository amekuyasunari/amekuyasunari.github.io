{"version":3,"sources":["views/commponents/Tweet.jsx","views/commponents/Timeline.jsx","views/commponents/TweetInput.jsx","App.js","reportWebVitals.js","index.js"],"names":["Tweet","props","React","useState","liked","setLiked","className","icon","displayName","accountName","content","onClick","Timeline","tweetList","tweets","map","tw","id","TweetInput","textareaRef","useRef","sendTweet","useCallback","current","value","addTweet","Date","getTime","ref","App","setTweets","tweet","prev","useEffect","getAxiosDemo","a","axios","get","res","console","log","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRA4BeA,EA1BD,SAACC,GAEX,MAA0BC,IAAMC,UAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KAMA,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKA,UAAU,iBAAf,SAAkCL,EAAMM,OACxC,sBAAKD,UAAU,gCAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,sBAAMA,UAAU,cAAhB,SAAgCL,EAAMO,cACtC,uBAAMF,UAAU,cAAhB,cAAiCL,EAAMQ,kBAE3C,qBAAKH,UAAU,UAAf,SAA2BL,EAAMS,UACjC,qBAAKJ,UAAU,cAAf,SACI,sBAAMK,QAdH,WACfN,GAAU,kBAAOD,MAaL,SAA+BA,EAAQ,eAAO,oBCCnDQ,EAnBE,SAACX,GACd,IAAMY,EAAYZ,EAAMa,OAAOC,KAAI,SAACC,GAChC,OACI,cAAC,EAAD,CAEIT,KAAMS,EAAGT,KACTC,YAAaQ,EAAGR,YAChBC,YAAaO,EAAGP,YAChBC,QAASM,EAAGN,SAJPM,EAAGC,OAUpB,OACI,qBAAKX,UAAU,WAAf,SAA4BO,KCerBK,EA9BI,SAACjB,GAEhB,IAAMkB,EAAcjB,IAAMkB,OAAO,MAE3BC,EAAYnB,IAAMoB,aAAa,WACjC,GAAIH,EAAYI,QAAS,CACrB,GAAiC,IAA7BJ,EAAYI,QAAQC,MAAa,OACrCvB,EAAMwB,SAAS,CACXR,IAAI,IAAIS,MAAOC,UACfpB,KAAM,eACNC,YAAa,2BACbC,YAAa,kBACbC,QAASS,EAAYI,QAAQC,QAGrCL,EAAYI,QAAQC,MAAQ,OAC7B,CAACL,EAAYI,QAAStB,EAAMwB,WAE/B,OACI,sBAAKnB,UAAU,cAAf,UACI,8BACI,0BAAUA,UAAU,iBAAiBsB,IAAMT,MAE/C,8BACI,wBAAQb,UAAU,aAAaK,QAAUU,EAAzC,4CC2DDQ,G,MA9EH,WAgDV,MAA4B3B,IAAMC,SAAS,IAA3C,mBAAOW,EAAP,KAAegB,EAAf,KAEML,EAAWvB,IAAMoB,aAAa,SAACS,GAAD,OAAWD,GAAW,SAACE,GAAD,OAAWD,GAAX,mBAAqBC,SAAQ,CAACF,IAMxF5B,IAAM+B,WAAW,WACfC,MACA,IAKF,IAAMA,EAAY,uCAAG,4BAAAC,EAAA,sEACDC,IAAMC,IAAI,gEADT,OACbC,EADa,OAEnBC,QAAQC,IAAIF,GACZR,GAAU,kBAAMQ,EAAIG,QAHD,2CAAH,qDAOlB,OACE,gCACE,cAAC,EAAD,CAAYhB,SAAWA,IACvB,cAAC,EAAD,CAAUX,OAASA,SCpEV4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.672dceb6.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Tweet = (props) => {\n\n    const [liked, setLiked] = React.useState(false);\n\n    const toggleLike = () => {\n        setLiked( () => !liked );\n    }\n\n    return (\n        <div className=\"tweet\">\n            <div className=\"icon-container\">{ props.icon }</div>\n            <div className=\"body-container status-display\">\n                <div className=\"status-display\">\n                    <span className=\"displayName\">{ props.displayName }</span>\n                    <span className=\"accountName\">@{ props.accountName }</span>\n                </div>\n                <div className=\"content\">{ props.content }</div>\n                <div className=\"status-icon\">\n                    <span onClick={ toggleLike }>{ liked ? \"‚ù§Ô∏è\" : \"‚ô°\"}</span>\n                </div>\n            </div>\n            \n        </div>\n    )\n}\n\nexport default Tweet;","import Tweet from './Tweet'\n\nconst Timeline = (props) => {\n    const tweetList = props.tweets.map((tw) => {\n        return(\n            <Tweet \n                key={tw.id}\n                icon={tw.icon}\n                displayName={tw.displayName}\n                accountName={tw.accountName}\n                content={tw.content}\n            />\n        )\n        \n    });\n\n    return (\n        <div className=\"timeline\">{ tweetList }</div>\n    );\n}\n\nexport default Timeline;","import React from \"react\";\n\nconst TweetInput = (props) => {\n\n    const textareaRef = React.useRef(null);\n\n    const sendTweet = React.useCallback( () => {\n        if (textareaRef.current) {\n            if (textareaRef.current.value == \"\") return;\n            props.addTweet({\n                id: new Date().getTime(),\n                icon: \"ü§£\",\n                displayName: \"„ÇÑ„Åô„Å™„Çä\",\n                accountName: \"yasunari_output\",\n                content: textareaRef.current.value\n            });\n        }\n        textareaRef.current.value = null;\n    }, [textareaRef.current, props.addTweet]);\n\n    return (\n        <div className=\"tweet-input\">\n            <div>\n                <textarea className=\"tweet-textarea\" ref={ textareaRef }></textarea>\n            </div>\n            <div>\n                <button className=\"send-tweet\" onClick={ sendTweet }>„ÉÑ„Ç§„Éº„Éà</button>\n            </div>\n        </div>\n    )\n}\n\nexport default TweetInput;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Timeline from \"./views/commponents/Timeline\";\nimport TweetInput from \"./views/commponents/TweetInput\";\nimport './assets/css/style.css';\n\n\nconst App = () => {\n  // return (\n  //   <div>\n  //     <Tweet \n  //       icon=\"‚õÑÔ∏è\"\n  //       displayName=\"„ÇÜ„Åç„Å†„Çã„Åæ\"\n  //       accountName=\"Yukidaruma\"\n  //       content=\"ÁßÅ„ÅÆÂêçÂâç„ÅØ„ÇÜ„Åç„Å†„Çã„Åæ„Åß„ÅôÔºÅ„Çà„Çç„Åó„ÅèÔºÅ\"\n  //     />\n  //     <Tweet \n  //       icon=\"ü§∂\"\n  //       displayName=\"„Çµ„É≥„Çø\"\n  //       accountName=\"Santa1225\"\n  //       content=\"ÁßÅ„ÅÆÂêçÂâç„ÅØ„Çµ„É≥„ÇøÔºÅ„Çà„Çç„Åó„ÅèÔºÅ\"\n  //     />\n  //     <Tweet \n  //       icon=\"üéÑ\"\n  //       displayName=\"„ÇØ„É™„Çπ„Éû„Çπ„ÉÑ„É™„Éº\"\n  //       accountName=\"Xmas\"\n  //       content=\"Êú®„Åß„Åô\"\n  //     />\n  //   </div>\n  // )\n\n  // const tweets = [\n  //   {\n  //     id: 1,\n  //     icon:\"‚õÑÔ∏è\",\n  //     displayName: \"„ÇÜ„Åç„Å†„Çã„Åæ\",\n  //     accountName: \"Yukidaruma\",\n  //     content: \"ÁßÅ„ÅÆÂêçÂâç„ÅØ„ÇÜ„Åç„Å†„Çã„Åæ„Åß„ÅôÔºÅ„Çà„Çç„Åó„ÅèÔºÅ\"\n  //   },\n  //   {\n  //     id: 2,\n  //     icon: \"üéÖ\",\n  //     displayName: \"„Çµ„É≥„Çø\",\n  //     accountName: \"Santa1225\",\n  //     content: \"„ÇØ„É™„Çπ„Éû„Çπ„Ç§„Éñ„ÅØÂøô„Åó„ÅÑ„ÅûÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅÔºÅ\"\n  //   },\n  //   {\n  //     id: 3,\n  //     icon: \"üéÑ\",\n  //     displayName: \"„ÇØ„É™„Çπ„Éû„Çπ„ÉÑ„É™„Éº\",\n  //     accountName: \"ChristmasTree\",\n  //     content: \"Êú®„Åß„Åô\"\n  //   },\n  // ]\n\n  const [tweets, setTweets] = React.useState([]);\n\n  const addTweet = React.useCallback( (tweet) => setTweets( (prev) => [tweet, ...prev] ),[setTweets]);\n\n\n  //useEffect„Çí‰Ωø„Å£„Å¶ÊúÄÂàù„ÅÆ‰∏ÄÂõû„Å†„ÅëÂÆüË°å„Åô„Çã\n  //Á¨¨2ÂºïÊï∞„ÅÆ [] „ÅÆ‰∏≠„ÅØ„ÄÅÂ§âÂåñ„ÇíÁõ£Ë¶ñ„Åó„Åü„ÅÑÂ§âÊï∞„ÇíÂÖ•„Çå„Çã„ÄÇ„Å™„Åë„Çå„Å∞Á©∫„ÄÇ\n  // => „Åù„ÅÆÂÄ§„ÅåÂ§âÂåñ„Åó„Åü„Çâ„ÄÅÂÜç„Å≥ useEffectÂÜÖ„ÅÆÂá¶ÁêÜ„ÅåÂëº„Å≥Âá∫„Åï„Çå„Çã\n  React.useEffect( () => { \n    getAxiosDemo(); \n  },[] )\n\n  //ÈùûÂêåÊúüÈÄö‰ø°„ÅßAPI„ÇíÂè©„ÅÑ„Å¶„Éá„Éº„Çø„ÇíÂèñÂæó„Åô„Çã\n  //ÂèñÂæó„Åó„Åü„Éá„Éº„Çø„Çí setTweets „Çí‰Ωø„Å£„Å¶ tweets „ÇíÊõ¥Êñ∞„Åô„Çã\n\n  const getAxiosDemo = async () => {\n    const res = await axios.get(\"https://run.mocky.io/v3/03285d38-7870-445b-acdc-37fde7495968\")\n    console.log(res);\n    setTweets(() => res.data);\n  }\n\n\n  return (\n    <div>\n      <TweetInput addTweet={ addTweet } />\n      <Timeline tweets={ tweets } />\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}